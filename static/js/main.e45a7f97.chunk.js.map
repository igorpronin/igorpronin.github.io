{"version":3,"sources":["icons/instagram.svg","icons/telegram.svg","components/TextCounter/Icon.tsx","components/TextCounter/CountItem.tsx","components/TextCounter/TextCounter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","width","height","marginRight","mr","logo","maxHeight","Icon","props","icon","classes","Box","className","src","Instagram","alt","Telegram","display","flexDirection","alignItems","marginBottom","CountItem","symbols","maxSymbols","icons","padding","TextCounter","storedValue","localStorage","getItem","defaultValue","useState","length","setSymbols","TextField","onChange","e","target","value","setItem","id","label","multiline","minRows","maxRows","Infinity","variant","theme","createTheme","overrides","MuiInputBase","input","App","ThemeProvider","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e45a7f97.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/instagram.02967a62.svg\";","export default __webpack_public_path__ + \"static/media/telegram.86fe8f60.svg\";","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Instagram from '../../icons/instagram.svg';\nimport Telegram from '../../icons/telegram.svg';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 22,\n    height: 22,\n    marginRight: mr => mr ? `${mr}px` : 0,\n  },\n  logo: {\n    width: '100%',\n    maxHeight: '100%'\n  }\n});\n\nexport type TIcons = 'inst' | 'tg'\n\ninterface IProps {\n  icon: TIcons,\n  mr: number\n}\n\nfunction Icon(props: IProps) {\n  const {icon, mr} = props;\n  const classes = useStyles(mr);\n  return (\n    <Box className={classes.root}>\n      {icon === 'inst' && <img className={classes.logo} src={Instagram} alt=\"img\" />}\n      {icon === 'tg' && <img className={classes.logo} src={Telegram} alt=\"img\" />}\n    </Box>\n  );\n}\n\nexport default Icon;\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport Icon from \"./Icon\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {TIcons} from './Icon';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  }\n});\n\ninterface IProps {\n  icon: TIcons\n  maxSymbols: number\n  symbols: number\n}\n\nfunction CountItem(props: IProps) {\n  const {icon, symbols, maxSymbols} = props;\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Icon mr={10} icon={icon} />\n      <span className=\"mr-10\">{symbols <= maxSymbols ? '✅' : '❌'}</span>\n      <span>Maximum symbols allowed: {maxSymbols}</span>\n    </Box>\n  );\n}\n\nexport default CountItem;\n","import React, { useState } from 'react';\nimport {TextField, Box} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CountItem from \"./CountItem\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  icons: {\n    padding: '18.5px 14px',\n    width: 400\n  }\n});\n\nfunction TextCounter() {\n  const classes = useStyles();\n  const storedValue = localStorage.getItem('text_counter_text');\n  const defaultValue = storedValue ? storedValue : '';\n  const [symbols, setSymbols] = useState(defaultValue.length);\n  const onChange = (e: any) => {\n    setSymbols(e.target.value.length);\n    localStorage.setItem('text_counter_text', e.target.value);\n  }\n  return (\n    <Box className={classes.root}>\n      <Box className=\"mb-12\">Symbols: {symbols}</Box>\n      <TextField\n        onChange={onChange}\n        id=\"base-textcounter-input\"\n        label=\"Enter text\"\n        multiline\n        minRows={3}\n        maxRows={Infinity}\n        defaultValue={defaultValue}\n        variant=\"outlined\"\n      />\n      <Box className={classes.icons}>\n        <CountItem icon=\"inst\" symbols={symbols} maxSymbols={2184} />\n        <CountItem icon=\"tg\" symbols={symbols} maxSymbols={4096} />\n      </Box>\n    </Box>\n  );\n}\n\nexport default TextCounter;\n","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router, Route, NavLink, Switch} from 'react-router-dom';\nimport TextCounter from './components/TextCounter/TextCounter';\nimport {createTheme, ThemeProvider} from '@material-ui/core';\n\nconst theme = createTheme({\n  overrides: {\n    MuiInputBase: {\n      input: {\n        width: 400\n      }\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <header className=\"App-header\">Services</header>\n          <nav className=\"Nav\">\n            <NavLink className=\"App-link\" to=\"/textcounter\" >Text Counter</NavLink>\n          </nav>\n          <Switch>\n            <Route path=\"/textcounter\">\n              <TextCounter />\n            </Route>\n          </Switch>\n        </div>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}